#PF-Exer-22

def generate_ticket(airline,source,destination,no_of_passengers):
    ticket_number_list=[]
    i=int(0)
    for i in range(0,no_of_passengers):
        s=int(101+i)
        ticket_number_list.append(airline+":"+source[0:3]+":"+destination[0:3]+":"+str(s))
    #Use the below return statement wherever applicable
    return ticket_number_list[-5:]

#Provide different values for airline,source,destination,no_of_passengers and test your program
print(generate_ticket("AI","Bangalore","London",7))



#PF-Exer-23
def translate(bilingual_dict,english_words_list):
    #Write your logic here
    swedish_words_list=[]
    for i in range(0,len(english_words_list)):
        for k in bilingual_dict:
            if(english_words_list[i]==k):
                swedish_words_list.append(bilingual_dict[k])

    return swedish_words_list


bilingual_dict= {"merry":"god", "christmas":"jul", "and":"och", "happy":"gott", "new":"nytt", "year":"ar"}
english_words_list=["merry","christmas"]
print("The bilingual dict is:",bilingual_dict)
print("The english words are:",english_words_list)

swedish_words_list=translate(bilingual_dict, english_words_list)
print("The equivalent swedish words are:",swedish_words_list)


//PF-Exer-24
//This verification is based on string match.

package main
import ("fmt")
func main() {
    var num int=find_square(3);
    fmt.Println(num);
}
func find_square(j int)int{
    return j*j
}



//JS-Exer-25

//Start writing your code here
function s(a)
{
    return a*(a+1)/2;
}
    console.log(s(3));







#PF-Assgn-29
def calculate(distance,no_of_passengers):
    total_cost=distance*70//10
    profit=no_of_passengers*80
    if(profit>total_cost):
        return profit-total_cost
    else:
        return -1



#Provide different values for distance, no_of_passenger and test your program
distance=20
no_of_passengers=50
print(calculate(distance,no_of_passengers))
